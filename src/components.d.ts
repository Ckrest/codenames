/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import { CellColor, CellData, CellMode } from "./extra/types";
export namespace Components {
    interface CodenamesBoard {
        /**
          * Data list used to generate the cells.
          * @length 25
         */
        "cellDataList"?: CellData[];
    }
    interface CodenamesCell {
        /**
          * Cell color.
         */
        "color": CellColor;
        /**
          * Cell display mode.
         */
        "mode": CellMode;
        /**
          * Whether the cell is revealed.
         */
        "revealed": boolean;
        /**
          * Word shown in cell.
         */
        "word": string;
    }
}
declare global {
    interface HTMLCodenamesBoardElement extends Components.CodenamesBoard, HTMLStencilElement {
    }
    var HTMLCodenamesBoardElement: {
        prototype: HTMLCodenamesBoardElement;
        new (): HTMLCodenamesBoardElement;
    };
    interface HTMLCodenamesCellElement extends Components.CodenamesCell, HTMLStencilElement {
    }
    var HTMLCodenamesCellElement: {
        prototype: HTMLCodenamesCellElement;
        new (): HTMLCodenamesCellElement;
    };
    interface HTMLElementTagNameMap {
        "codenames-board": HTMLCodenamesBoardElement;
        "codenames-cell": HTMLCodenamesCellElement;
    }
}
declare namespace LocalJSX {
    interface CodenamesBoard {
        /**
          * Data list used to generate the cells.
          * @length 25
         */
        "cellDataList"?: CellData[];
    }
    interface CodenamesCell {
        /**
          * Cell color.
         */
        "color"?: CellColor;
        /**
          * Cell display mode.
         */
        "mode"?: CellMode;
        /**
          * Whether the cell is revealed.
         */
        "revealed"?: boolean;
        /**
          * Word shown in cell.
         */
        "word"?: string;
    }
    interface IntrinsicElements {
        "codenames-board": CodenamesBoard;
        "codenames-cell": CodenamesCell;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "codenames-board": LocalJSX.CodenamesBoard & JSXBase.HTMLAttributes<HTMLCodenamesBoardElement>;
            "codenames-cell": LocalJSX.CodenamesCell & JSXBase.HTMLAttributes<HTMLCodenamesCellElement>;
        }
    }
}
